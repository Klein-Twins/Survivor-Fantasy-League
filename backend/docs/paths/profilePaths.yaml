ProfileSearch:
  get:
    summary: Retrieve profiles by search criteria
    description: This endpoint allows you to search for profiles based on username, first name, and league ID, with pagination options.
    tags:
      - Profile
    parameters:
      - name: userName
        in: query
        required: false
        description: The username of the profile.
        schema:
          type: string
      - name: firstName
        in: query
        required: false
        description: The first name of the profile.
        schema:
          type: string
      - name: lastName
        in: query
        required: false
        description: The last name of the profile.
        schema:
          type: string
      - name: leagueId
        in: query
        required: false
        description: The ID of the league the profile is associated with.
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: The page number for pagination.
        schema:
          type: integer
          example: 1
      - name: limit
        in: query
        required: false
        description: The number of profiles to return per page.
        schema:
          type: integer
          example: 10
      - name: sortBy
        in: query
        required: false
        description: The field to sort the profiles by. Options are "firstName", "lastName", and "userName". Defaults to "firstName" if not provided.
        schema:
          type: string
          enum: [firstName, lastName, userName]
          example: firstName
      - name: isAsc
        in: query
        required: false
        description: A boolean indicating whether to sort in ascending (true) or descending (false) order. Defaults to true (ascending).
        schema:
          type: boolean
          example: true
    responses:
      "200":
        description: A list of profiles matching the search criteria.
        content:
          application/json:
            schema:
              type: object
              properties:
                results:
                  type: object
                  properties:
                    searchResults:
                      type: array
                      items:
                        type: object
                        properties:
                          profileId:
                            type: string
                            description: The unique ID of the profile.
                            example: e23223e4-6d61-4875-9750-b842b82e4933
                          userName:
                            type: string
                            description: The username of the profile.
                            example: blackpanther
                          firstName:
                            type: string
                            description: The first name of the profile.
                            example: TChalla
                          lastName:
                            type: string
                            description: The last name of the profile.
                            example: Wakanda
                          imageUrl:
                            type: string
                            description: The URL of the profile image.
                            example: "/assets/images/profileImages/blackpanther.jpeg"
                          inviteStatus:
                            type: string
                            description: The invitation status of the profile in the league.
                            enum: [pending, accepted]
                            example: null
                    pagination:
                      type: object
                      properties:
                        currentPage:
                          type: integer
                          description: The current page of the result set.
                          example: 1
                        totalPages:
                          type: integer
                          description: The total number of pages available.
                          example: 1
                        totalCount:
                          type: integer
                          description: The total number of profiles that match the search criteria.
                          example: 8
                message:
                  type: string
                  description: A message indicating the result of the search.
                  example: "Found matching profiles"
                foundResults:
                  type: boolean
                  description: Indicates whether matching profiles were found.
                  example: true
      "400":
        description: Bad request, invalid parameters.
        content:
          application/json:
            schema:
              $ref: "../components/errorComponents.yaml#/ApiError"

      "500":
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: "../components/errorComponents.yaml#/ApiError"
