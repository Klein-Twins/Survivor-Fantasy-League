components:
  responses:
    GetSurveyForEpisodeForLeagueMember:
      type: object
      allOf:
        - $ref: '../../common.yaml#/components/schemas/ApiResponse'
        - type: object
          required:
            - responseData
          properties:
            responseData:
              $ref: '#/components/schemas/GetSurveyForEpisodeForLeagueMemberResponseData'
  schemas:
    GetSurveyForEpisodeForLeagueMemberResponseData:
      type: object
      required:
        - leagueSurveys
      properties:
        leagueSurveys:
          type: array
          items:
            $ref: '#/components/schemas/LeagueSurvey'

    SurveyAvailabilityStatusEnum:
      type: string
      enum:
        - 'Available'
        - 'Not Open Yet'
        - 'Closed'

    SurveySubmissionStatusEnum:
      type: string
      enum:
        - 'Not started'
        - 'In progress'
        - 'Completed'
      default: 'Not Started'
      description: The status of the survey filled out by tha profile
      example: 'Not Started'

    LeagueSurvey:
      type: object
      required:
        - leagueSurveyId
        - surveyId
        - episode
        - surveyType
        - picks
      properties:
        leagueSurveyId:
          type: string
          format: uuid
          description: The ID of the league survey
        surveyId:
          type: string
          description: The ID of the survey
          example: '49e27bd8-dc24-4159-9630-e989025bf8fd'
        episode:
          $ref: '#/components/schemas/Episode'
        surveyType:
          $ref: '#/components/schemas/SurveyType'
        picks:
          type: array
          items:
            $ref: './picks.yaml#/components/schemas/Pick'
        SurveySubmissionStatus:
          $ref: '#/components/schemas/SurveySubmissionStatusEnum'
        SurveyAvailabilityStatus:
          $ref: '#/components/schemas/SurveyAvailabilityStatusEnum'

    SurveyType:
      type: string
      enum: ['Weekly', 'Premier', 'Finale', 'All']
      default: 'All'
      description: The type of survey
      example: 'Weekly'

    Episode:
      type: object
      required:
        - id
        - seasonId
        - episodeNumber
        - episodeAirDate
        - episodeTitle
        - episodeDescription
        - episodeImage
      properties:
        id:
          type: string
          description: The ID of the episode
          example: '49e27bd8-dc24-4159-9630-e989025bf8fd'
        seasonId:
          type: number
          description: The ID of the season the episode is in
          example: '47'
        episodeNumber:
          type: number
          description: The number of the episode
          example: '1'
        episodeAirDate:
          type: string
          format: date
          description: The air date of the episode
          example: '2021-09-22'
        episodeTitle:
          type: string
          description: The title of the episode
          example: 'The Beginning'
        episodeDescription:
          type: string
          description: The description of the episode
          example: 'The first episode of the season'
        episodeImage:
          type: string
          description: The image of the episode
          example: 'https://www.image.com/episode.jpg'
