components:
  requestBodies:
    LoginUserRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: Email address of the user
          example: user@example.com
        password:
          type: string
          format: password
          description: Password for the user account
          minLength: 8
          example: StrongPassword123!

    SignupUserRequest:
      type: object
      required:
        - email
        - password
        - username
      properties:
        email:
          type: string
          format: email
          description: Email address for the new user
          example: user@example.com
        password:
          type: string
          format: password
          description: Password for the new account
          example: StrongPassword123!
        username:
          type: string
          description: Unique username for the account
          example: SurvivorFan69
        firstName:
          type: string
          description: First name of the user
          example: Jeff
        lastName:
          type: string
          description: Last name of the user
          example: Probst

  responses:
    LogoutUserResponseSuccess:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Success message for logout
          example: "User logged out successfully. All session data has been cleared."

    UserCreateSessionResponseSuccess:
      type: object
      required:
        - message
        - account
        - numSecondsRefreshTokenExpiresIn
        - isAuthenticated
      properties:
        message:
          type: string
          description: Success message for auth
          example: "User signed up successfully"
        account:
          $ref: "#/components/schemas/Account"
        numSecondsRefreshTokenExpiresIn:
          type: number
          description: Number of seconds the session is valid for
          example: 1800
        isAuthenticated:
          type: boolean
          example: true

  schemas:
    Account:
      type: object
      required:
        - userName
        - profileId
        - email
        - imageUrl
      properties:
        userName:
          type: string
          description: The username of the account holder
          example: SurvivorFan69
        profileId:
          type: string
          description: Unique identifier for the profile
          example: Unique-Profile-Id-String
        email:
          type: string
          format: email
          description: Email address associated with the account
          example: user@example.com
        imageUrl:
          type: string
          format: uri
          description: URL to the profile image
          example: assets/images/profileImages/genericProfileImage.jpg
        firstName:
          type: string
          description: First name of the user
          example: Jeff
        lastName:
          type: string
          description: Last name of the user
          example: Probst
