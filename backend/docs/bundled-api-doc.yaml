openapi: 3.0.3
info:
  title: Survivor Fantasy League - OpenAPI 3.0.3
  description: This is the Survivor Fantasy League Spec for API's
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: pklein111697@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.11
servers:
  - url: 'http://localhost:3000'
    variables: {}
paths:
  /api/auth/signup:
    post:
      operationId: signupUser
      summary: Registers a new user account
      description: |
        Creates a new user account and returns authentication tokens via cookies.
        Upon success:
        - Access and refresh tokens are set in `Set-Cookie` headers.
        - A success message and account details are returned in the response body.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - username
              properties:
                email:
                  type: string
                  format: email
                  description: Email address for the new user
                  example: user@example.com
                password:
                  type: string
                  format: password
                  description: Password for the new account
                  example: StrongPassword123!
                username:
                  type: string
                  description: Unique username for the account
                  example: SurvivorFan69
                firstName:
                  type: string
                  description: First name of the user
                  example: Jeff
                lastName:
                  type: string
                  description: Last name of the user
                  example: Probst
      responses:
        '201':
          description: User created and authenticated successfully
          headers:
            Set-Cookie:
              description: |
                Authentication cookies included in the response:
                  - `accessToken`: Used for API authorization.
                  - `refreshToken`: Used for session renewal.
                Both cookies are set with `HttpOnly`, `Secure`, and `SameSite=Strict` flags.
              schema:
                type: string
                example: |
                  accessToken=your-access-token-here; HttpOnly; Secure; SameSite=Strict
                  refreshToken=your-refresh-token-here; HttpOnly; Secure; SameSite=Strict
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - account
                  - numSecondsRefreshTokenExpiresIn
                  - isAuthenticated
                properties:
                  message:
                    type: string
                    description: Success message for auth
                    example: User signed up successfully
                  account:
                    type: object
                    required:
                      - userName
                      - profileId
                      - email
                      - imageUrl
                    properties:
                      userName:
                        type: string
                        description: The username of the account holder
                        example: SurvivorFan69
                      profileId:
                        type: string
                        description: Unique identifier for the profile
                        example: Unique-Profile-Id-String
                      email:
                        type: string
                        format: email
                        description: Email address associated with the account
                        example: user@example.com
                      imageUrl:
                        type: string
                        format: uri
                        description: URL to the profile image
                        example: assets/images/profileImages/genericProfileImage.jpg
                      firstName:
                        type: string
                        description: First name of the user
                        example: Jeff
                      lastName:
                        type: string
                        description: Last name of the user
                        example: Probst
                  numSecondsRefreshTokenExpiresIn:
                    type: number
                    description: Number of seconds the session is valid for
                    example: 1800
                  isAuthenticated:
                    type: boolean
                    example: true
              examples:
                success:
                  summary: Successful response
                  value:
                    message: User signed up successfully
                    account:
                      userName: SurvivorFan69
                      profileId: unique-profile-id
                      email: user@example.com
                      imageUrl: assets/images/profileImages/default.jpg
                      firstName: Jeff
                      lastName: Probst
                    numSecondsRefreshTokenExpiresIn: 1800
                    isAuthenticated: true
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 400
                        example: 400
                      error:
                        enum:
                          - Bad Request
                        example: Bad Request
                      message:
                        example: The request contains invalid or missing parameters.
              examples:
                missingEmail:
                  summary: Missing email error
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: Missing email
                missingUserName:
                  summary: Missing userName error
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: Missing userName
                missingPassword:
                  summary: Missing password error
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: Missing password
                weakPassword:
                  summary: Weak password error
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: Password is too weak
                invalidEmail:
                  summary: Invalid email error
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: Invalid email
                invalidUserName:
                  summary: Invalid userName error
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: Invalid user name - must be characters and numbers - no spaces
                invalidName:
                  summary: Invalid name error
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: Invalid name - must be characters with spaces allowed
        '409':
          description: Conflict - Email or username already exists
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 409
                        example: 409
                      error:
                        enum:
                          - Conflict
                        example: Conflict
                      message:
                        example: The resource already exists or conflicts with another resource.
              examples:
                emailConflict:
                  summary: Email conflict
                  value:
                    statusCode: 409
                    error: Conflict
                    message: Email already tied to an account
                userNameConflict:
                  summary: userName conflict
                  value:
                    statusCode: 409
                    error: Conflict
                    message: Username already tied to an account
        '500':
          description: Internal Server Error - Unexpected error.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 500
                        example: 500
                      error:
                        enum:
                          - Internal Server Error
                        example: Internal Server Error
                      message:
                        example: An unexpected error occurred on the server.
              examples:
                ServerError:
                  summary: Internal Server Error
                  value:
                    statusCode: 500
                    error: Internal Server Error
                    message: An unexpected error occurred on the server. Please try again later.
  /api/auth/login:
    post:
      operationId: loginUser
      summary: Authenticate a user
      description: 'Logs in a user by validating their credentials. Upon success: - Access and refresh tokens are set in `Set-Cookie` headers. - A success message and account details are returned in the response body.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: Email address of the user
                  example: user@example.com
                password:
                  type: string
                  format: password
                  description: Password for the user account
                  minLength: 8
                  example: StrongPassword123!
      responses:
        '200':
          description: User logged in successfully
          headers:
            Set-Cookie:
              description: |
                Authentication cookies included in the response:
                  - `accessToken`: Used for API authorization.
                  - `refreshToken`: Used for session renewal.
                Both cookies are set with `HttpOnly`, `Secure`, and `SameSite=Strict` flags.
              schema:
                type: string
                example: |
                  accessToken=your-access-token-here; HttpOnly; Secure; SameSite=Strict
                  refreshToken=your-refresh-token-here; HttpOnly; Secure; SameSite=Strict
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - account
                  - numSecondsRefreshTokenExpiresIn
                  - isAuthenticated
                properties:
                  message:
                    type: string
                    description: Success message for auth
                    example: User signed up successfully
                  account:
                    type: object
                    required:
                      - userName
                      - profileId
                      - email
                      - imageUrl
                    properties:
                      userName:
                        type: string
                        description: The username of the account holder
                        example: SurvivorFan69
                      profileId:
                        type: string
                        description: Unique identifier for the profile
                        example: Unique-Profile-Id-String
                      email:
                        type: string
                        format: email
                        description: Email address associated with the account
                        example: user@example.com
                      imageUrl:
                        type: string
                        format: uri
                        description: URL to the profile image
                        example: assets/images/profileImages/genericProfileImage.jpg
                      firstName:
                        type: string
                        description: First name of the user
                        example: Jeff
                      lastName:
                        type: string
                        description: Last name of the user
                        example: Probst
                  numSecondsRefreshTokenExpiresIn:
                    type: number
                    description: Number of seconds the session is valid for
                    example: 1800
                  isAuthenticated:
                    type: boolean
                    example: true
        '401':
          description: Unauthorized - Invalid email or password
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 401
                        example: 401
                      error:
                        enum:
                          - Unauthorized
                        example: Unauthorized
                      message:
                        example: Authentication is required or failed.
              examples:
                invalidCredentials:
                  summary: Invalid credentials
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: Invalid username/password
        '500':
          description: Internal Server Error - Unexpected error.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 500
                        example: 500
                      error:
                        enum:
                          - Internal Server Error
                        example: Internal Server Error
                      message:
                        example: An unexpected error occurred on the server.
              examples:
                ServerError:
                  summary: Internal Server Error
                  value:
                    statusCode: 500
                    error: Internal Server Error
                    message: An unexpected error occurred on the server. Please try again later.
  /api/auth/logout:
    post:
      operationId: logoutUser
      summary: Log out a user
      description: |
        Logs out a user by invalidating their JWT tokens, clearing any session information, 
        and removing cookies from the client.
        - If the cookies are missing or tampered with, appropriate errors are returned.
      tags:
        - Authentication
      parameters:
        - in: query
          name: profileId
          required: true
          schema:
            type: string
          description: Unique identifier for the user session's profile.
          example: unique-profile-id
      responses:
        '200':
          description: User logged out successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: Success message for logout
                    enum:
                      - User logged out successfully. All session data has been cleared.
                    example: User logged out successfully. All session data has been cleared.
              examples:
                success:
                  summary: Successful logout
                  value:
                    message: User logged out successfully. All session data has been cleared.
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 401
                        example: 401
                      error:
                        enum:
                          - Unauthorized
                        example: Unauthorized
                      message:
                        example: Authentication is required or failed.
              examples:
                UnauthorizedError:
                  summary: Unauthorized Error
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: Authentication is required or failed.
        '500':
          description: Internal Server Error - Unexpected error.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 500
                        example: 500
                      error:
                        enum:
                          - Internal Server Error
                        example: Internal Server Error
                      message:
                        example: An unexpected error occurred on the server.
              examples:
                ServerError:
                  summary: Internal Server Error
                  value:
                    statusCode: 500
                    error: Internal Server Error
                    message: An unexpected error occurred on the server. Please try again later.
      security:
        - accessTokenCookie: []
        - refreshTokenCookie: []
  /api/auth/check-auth:
    get:
      summary: Validate refresh token authenticity
      operationId: checkAuth
      description: |
        This endpoint verifies if the refresh token is valid. It is used to confirm 
        the user's authentication status, such as during a page reload. Requires the 
        refresh token cookie and the associated profile ID as input.
      tags:
        - Token
      parameters:
        - in: query
          name: profileId
          required: true
          schema:
            type: string
          description: Unique identifier for the user session's profile.
          example: unique-profile-id
      responses:
        '200':
          description: User authentication status retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - account
                  - numSecondsRefreshTokenExpiresIn
                  - isAuthenticated
                properties:
                  message:
                    type: string
                    description: Success message for auth
                    example: User signed up successfully
                  account:
                    type: object
                    required:
                      - userName
                      - profileId
                      - email
                      - imageUrl
                    properties:
                      userName:
                        type: string
                        description: The username of the account holder
                        example: SurvivorFan69
                      profileId:
                        type: string
                        description: Unique identifier for the profile
                        example: Unique-Profile-Id-String
                      email:
                        type: string
                        format: email
                        description: Email address associated with the account
                        example: user@example.com
                      imageUrl:
                        type: string
                        format: uri
                        description: URL to the profile image
                        example: assets/images/profileImages/genericProfileImage.jpg
                      firstName:
                        type: string
                        description: First name of the user
                        example: Jeff
                      lastName:
                        type: string
                        description: Last name of the user
                        example: Probst
                  numSecondsRefreshTokenExpiresIn:
                    type: number
                    description: Number of seconds the session is valid for
                    example: 1800
                  isAuthenticated:
                    type: boolean
                    example: true
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 401
                        example: 401
                      error:
                        enum:
                          - Unauthorized
                        example: Unauthorized
                      message:
                        example: Authentication is required or failed.
              examples:
                UnauthorizedError:
                  summary: Unauthorized Error
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: Authentication is required or failed.
        '500':
          description: Internal Server Error - Unexpected error.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 500
                        example: 500
                      error:
                        enum:
                          - Internal Server Error
                        example: Internal Server Error
                      message:
                        example: An unexpected error occurred on the server.
              examples:
                ServerError:
                  summary: Internal Server Error
                  value:
                    statusCode: 500
                    error: Internal Server Error
                    message: An unexpected error occurred on the server. Please try again later.
      security:
        - refreshTokenCookie: []
  /api/auth/extend-session:
    post:
      summary: Extend user session
      operationId: extendSession
      description: |
        Extends the user session by generating a new refresh token and access token, 
        if the refresh token is valid. The response includes both tokens set as cookies 
        and a time-to-expiry value for the refresh token.
      tags:
        - Token
      parameters:
        - in: query
          name: profileId
          required: true
          schema:
            type: string
          description: Unique identifier for the user session's profile.
          example: unique-profile-id
      responses:
        '200':
          description: User session extended successfully.
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - account
                  - numSecondsRefreshTokenExpiresIn
                  - isAuthenticated
                properties:
                  message:
                    type: string
                    description: Success message for auth
                    example: User signed up successfully
                  account:
                    type: object
                    required:
                      - userName
                      - profileId
                      - email
                      - imageUrl
                    properties:
                      userName:
                        type: string
                        description: The username of the account holder
                        example: SurvivorFan69
                      profileId:
                        type: string
                        description: Unique identifier for the profile
                        example: Unique-Profile-Id-String
                      email:
                        type: string
                        format: email
                        description: Email address associated with the account
                        example: user@example.com
                      imageUrl:
                        type: string
                        format: uri
                        description: URL to the profile image
                        example: assets/images/profileImages/genericProfileImage.jpg
                      firstName:
                        type: string
                        description: First name of the user
                        example: Jeff
                      lastName:
                        type: string
                        description: Last name of the user
                        example: Probst
                  numSecondsRefreshTokenExpiresIn:
                    type: number
                    description: Number of seconds the session is valid for
                    example: 1800
                  isAuthenticated:
                    type: boolean
                    example: true
          headers:
            Set-Cookie:
              description: |
                Authentication cookies included in the response:
                  - `accessToken`: Used for API authorization.
                  - `refreshToken`: Used for session renewal.
                Both cookies are set with `HttpOnly`, `Secure`, and `SameSite=Strict` flags.
              schema:
                type: string
                example: |
                  accessToken=your-access-token-here; HttpOnly; Secure; SameSite=Strict
                  refreshToken=your-refresh-token-here; HttpOnly; Secure; SameSite=Strict
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 401
                        example: 401
                      error:
                        enum:
                          - Unauthorized
                        example: Unauthorized
                      message:
                        example: Authentication is required or failed.
              examples:
                UnauthorizedError:
                  summary: Unauthorized Error
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: Authentication is required or failed.
        '500':
          description: Internal Server Error - Unexpected error.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 500
                        example: 500
                      error:
                        enum:
                          - Internal Server Error
                        example: Internal Server Error
                      message:
                        example: An unexpected error occurred on the server.
              examples:
                ServerError:
                  summary: Internal Server Error
                  value:
                    statusCode: 500
                    error: Internal Server Error
                    message: An unexpected error occurred on the server. Please try again later.
      security:
        - refreshTokenCookie: []
  /api/profile/leagues:
    get:
      summary: Get leagues for a profile
      description: Gets leagues for a profile
      tags:
        - Profile
      operationId: getLeaguesForProfile
      parameters:
        - in: query
          name: profileId
          required: true
          schema:
            type: string
          description: Unique identifier for the user session's profile.
          example: unique-profile-id
      responses:
        '201':
          description: League created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - leagues
                  - message
                properties:
                  message:
                    type: string
                    description: Leagues sucessfully retrived for profile
                    example: Leagues for profile successfully retrieved
                  leagues:
                    type: array
                    items:
                      type: object
                      required:
                        - leagueId
                        - seasonId
                        - name
                        - season
                      properties:
                        leagueId:
                          type: integer
                          description: The unique identifier of the newly created league
                          example: 1
                        seasonId:
                          type: integer
                          description: The ID of the season associated with the league
                          example: 47
                        name:
                          type: string
                          description: The name of the league
                          example: Corner By The Bookshelf
                        createdAt:
                          type: string
                          format: date-time
                          description: The timestamp when the league was created
                          example: '2024-11-10T16:35:09.034Z'
                        updatedAt:
                          type: string
                          format: date-time
                          description: The timestamp when the league was last updated
                          example: '2024-11-10T16:35:09.034Z'
                        season:
                          type: object
                          properties:
                            seasonId:
                              type: integer
                              description: The unique identifier of the season
                              example: 47
                            theme:
                              type: string
                              description: The theme of the season
                              example: The New Era 2.0
                            location:
                              type: string
                              description: The location of the season
                              example: 'Fiji, Oceania'
                            name:
                              type: string
                              description: The name of the season (optional)
                              example: null
              examples:
                LeaguesFound:
                  summary: Profile is enrolled in leagues.
                  value:
                    message: Profile is enrolled in the following leagues
                    leagues:
                      - leagueId: 1
                        seasonId: 47
                        name: Corner by the Bookshelf
                        season:
                          seasonId: 47
                          theme: The New Era 2.0
                          location: 'Fiji, Oceania'
                          name: null
                      - leagueId: 2
                        seasonId: 47
                        name: Around the lit torch
                        season:
                          seasonId: 47
                          theme: The New Era 2.0
                          location: 'Fiji, Oceania'
                          name: null
                NoLeaguesFound:
                  summary: no leagues found
                  value:
                    message: Profile is not enrolled in any leagues
                    leagues: []
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 401
                        example: 401
                      error:
                        enum:
                          - Unauthorized
                        example: Unauthorized
                      message:
                        example: Authentication is required or failed.
              examples:
                UnauthorizedError:
                  summary: Unauthorized Error
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: Authentication is required or failed.
        '500':
          description: Internal Server Error - Unexpected error.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 500
                        example: 500
                      error:
                        enum:
                          - Internal Server Error
                        example: Internal Server Error
                      message:
                        example: An unexpected error occurred on the server.
              examples:
                ServerError:
                  summary: Internal Server Error
                  value:
                    statusCode: 500
                    error: Internal Server Error
                    message: An unexpected error occurred on the server. Please try again later.
      security:
        - accessTokenCookie: []
        - refreshTokenCookie: []
    post:
      summary: Create a new League
      description: Creates a new league for a given season.
      tags:
        - Profile
      operationId: createLeague
      parameters:
        - in: query
          name: profileId
          required: true
          schema:
            type: string
          description: Unique identifier for the user session's profile.
          example: unique-profile-id
        - name: userName
          in: query
          required: false
          description: The username of the profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the league
                  example: Corner By The Bookshelf
                seasonId:
                  type: integer
                  description: The ID of the season the league belongs to
                  example: 47
                profileId:
                  type: string
                  description: The profileId of the user creating the league
                  example: 49e27bd8-dc24-4159-9630-e989025bf8fd
              required:
                - name
                - seasonId
                - profileId
      responses:
        '201':
          description: League created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  league:
                    $ref: '#components/schemas/League'
                  statusCode:
                    type: integer
                    description: The HTTP status code indicating the result of the operation
                    example: 201
                  message:
                    type: string
                    description: A message describing the outcome of the operation
                    example: League successfully created.
        '400':
          description: 'Bad request, missing required fields (name, seasonId)'
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 400
                        example: 400
                      error:
                        enum:
                          - Bad Request
                        example: Bad Request
                      message:
                        example: The request contains invalid or missing parameters.
              examples:
                MissingName:
                  summary: Missing Name
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: Missing name for league
                MissingSeason:
                  summary: Missing seasonId
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: Missing seasonId for league
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 401
                        example: 401
                      error:
                        enum:
                          - Unauthorized
                        example: Unauthorized
                      message:
                        example: Authentication is required or failed.
              examples:
                UnauthorizedError:
                  summary: Unauthorized Error
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: Authentication is required or failed.
        '404':
          description: Season not found
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 404
                        example: 404
                      error:
                        enum:
                          - Not Found
                        example: Not Found
                      message:
                        example: The requested resource was not found.
              examples:
                SeasonNotFound:
                  value:
                    statusCode: 404
                    error: Not Found
                    message: Season not found
        '500':
          description: Internal Server Error - Unexpected error.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 500
                        example: 500
                      error:
                        enum:
                          - Internal Server Error
                        example: Internal Server Error
                      message:
                        example: An unexpected error occurred on the server.
              examples:
                ServerError:
                  summary: Internal Server Error
                  value:
                    statusCode: 500
                    error: Internal Server Error
                    message: An unexpected error occurred on the server. Please try again later.
      security:
        - refreshTokenCookie: []
        - accessTokenCookie: []
  /api/survivor:
    get:
      summary: Get survivors
      operationId: getSurvivors
      description: 'Retrieves a list of survivors. Optionally, filter by season ID and request detailed information.'
      tags:
        - Survivors
      parameters:
        - in: query
          name: seasonId
          required: false
          schema:
            type: integer
            description: 'The ID of the season to retrieve survivors from. If omitted, returns all survivors.'
            example: 47
        - in: query
          name: withDetails
          required: false
          schema:
            type: boolean
            default: false
            description: Whether to include detailed information about the survivors. Defaults to false.
            example: true
      responses:
        '200':
          description: 'A list of survivors, optionally with details'
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    required:
                      - message
                      - survivorsWithDetails
                    properties:
                      message:
                        type: string
                        enum:
                          - Survivors with details successfully retrieved
                        example: Survivors with details successfully retrieved
                      survivorsWithDetails:
                        type: array
                        items:
                          type: array
                          items:
                            type: object
                            required:
                              - survivorId
                              - firstName
                              - lastName
                              - nickName
                              - fromState
                              - fromCountry
                              - description
                              - age
                              - job
                              - imageUrl
                            properties:
                              seasonId:
                                type: integer
                                description: The season tied with this survivor's details
                                example: 47
                              survivorId:
                                type: integer
                                description: The survivor's unique identifier
                                example: 1
                              firstName:
                                type: string
                                description: The survivor's first name
                                example: Andy
                              lastName:
                                type: string
                                description: The survivor's last name
                                example: Rueda
                              nickName:
                                type: string
                                description: The survivor's nickname
                                example: The Brain
                              fromCity:
                                type: string
                                description: The city the survivor is from
                                example: Brooklyn
                              fromState:
                                type: string
                                description: The state the survivor is from
                                example: New York
                              fromCountry:
                                type: string
                                description: The country the survivor is from
                                example: US
                              age:
                                type: integer
                                description: The survivor's age at the time of the season
                                example: 31
                              description:
                                type: string
                                description: A short description about the survivor
                                example: An outgoing and energetic person.
                              job:
                                type: string
                                description: The survivor's job/occupation
                                example: AI Research Assistant
                              imageUrl:
                                type: string
                                description: The path of the survivor image
                                example: /assets/images/survivors/AndyRueda47.jpeg
                  - type: object
                    required:
                      - message
                      - survivors
                    properties:
                      message:
                        type: string
                        enum:
                          - Survivors successfully retrieved
                        example: Survivors successfully retrieved
                      survivors:
                        type: array
                        items:
                          type: object
                          required:
                            - survivorId
                            - firstName
                            - lastName
                          properties:
                            survivorId:
                              type: integer
                              description: The survivor's unique identifier
                              example: 1
                            firstName:
                              type: string
                              description: The survivor's first name
                              example: Andy
                            lastName:
                              type: string
                              description: The survivor's last name
                              example: Rueda
              examples:
                SurvivorsWithDetails:
                  summary: Survivors with details successfully retrieved
                  value:
                    message: Survivors with details successfully retrieved
                    survivorsWithDetails:
                      - seasonId: 47
                        survivorId: 1
                        firstName: Andy
                        lastName: Rueda
                        nickName: The Brain
                        fromCity: Brooklyn
                        fromState: New York
                        fromCountry: US
                        description: An outgoing and energetic person.
                        age: 31
                        job: AI Research Assistant
                        imageUrl: /assets/images/survivors/AndyRueda47.jpeg
                      - seasonId: 47
                        survivorId: 2
                        firstName: Jane
                        lastName: Doe
                        nickName: The Strategist
                        fromCity: Los Angeles
                        fromState: California
                        fromCountry: US
                        description: A cunning and strategic thinker.
                        age: 28
                        job: Software Engineer
                        imageUrl: /assets/images/survivors/JaneDoe47.jpeg
                SurvivorsWithoutDetails:
                  summary: Survivors successfully retrieved without detailed information
                  value:
                    message: Survivors successfully retrieved
                    survivors:
                      - survivorId: 1
                        firstName: Andy
                        lastName: Rueda
                      - survivorId: 2
                        firstName: Jane
                        lastName: Doe
        '404':
          description: Not Found - No survivors found for the provided season ID
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 404
                        example: 404
                      error:
                        enum:
                          - Not Found
                        example: Not Found
                      message:
                        example: The requested resource was not found.
              examples:
                NoSurvivorsFound:
                  value:
                    statusCode: 404
                    error: Not Found
                    message: No survivors found
                NoSeasonFound:
                  value:
                    statusCode: 404
                    error: Not Found
                    message: No season found
        '500':
          description: Internal Server Error - Unexpected error.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 500
                        example: 500
                      error:
                        enum:
                          - Internal Server Error
                        example: Internal Server Error
                      message:
                        example: An unexpected error occurred on the server.
              examples:
                ServerError:
                  summary: Internal Server Error
                  value:
                    statusCode: 500
                    error: Internal Server Error
                    message: An unexpected error occurred on the server. Please try again later.
  /api/league/profile/search:
    get:
      summary: Retrieve profiles by search criteria
      description: 'This endpoint allows you to search for profiles based on username, first name, and league ID, with pagination options.'
      operationId: searchProfilesForLeagueInvite
      tags:
        - League
      parameters:
        - name: userName
          in: query
          required: false
          description: The username of the profile.
          schema:
            type: string
        - name: firstName
          in: query
          required: false
          description: The first name of the profile.
          schema:
            type: string
        - name: lastName
          in: query
          required: false
          description: The last name of the profile.
          schema:
            type: string
        - name: leagueId
          in: query
          required: true
          description: The ID of the league the profile is associated with.
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: The page number for pagination.
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          required: false
          description: The number of profiles to return per page.
          schema:
            type: integer
            example: 10
        - name: sortBy
          in: query
          required: false
          description: 'The field to sort the profiles by. Options are "firstName", "lastName", and "userName". Defaults to "firstName" if not provided.'
          schema:
            type: string
            enum:
              - firstName
              - lastName
              - userName
            example: firstName
        - name: isAsc
          in: query
          required: false
          description: A boolean indicating whether to sort in ascending (true) or descending (false) order. Defaults to true (ascending).
          schema:
            type: boolean
            example: true
        - in: query
          name: profileId
          required: true
          schema:
            type: string
          description: Unique identifier for the user session's profile.
          example: unique-profile-id
      responses:
        '200':
          description: 'A list of profiles matching the search criteria. Found results will be true whenever the search returns results, otherwise it will be false and the searchResults object will be null'
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: object
                    properties:
                      searchResults:
                        type: array
                        items:
                          type: object
                          properties:
                            profileId:
                              type: string
                              description: The unique ID of the profile.
                              example: e23223e4-6d61-4875-9750-b842b82e4933
                            userName:
                              type: string
                              description: The username of the profile.
                              example: blackpanther
                            firstName:
                              type: string
                              description: The first name of the profile.
                              example: TChalla
                            lastName:
                              type: string
                              description: The last name of the profile.
                              example: Wakanda
                            imageUrl:
                              type: string
                              description: The URL of the profile image.
                              example: /assets/images/profileImages/blackpanther.jpeg
                            inviteStatus:
                              type: string
                              description: The invitation status of the profile in the league.
                              enum:
                                - pending
                                - accepted
                              example: null
                      pagination:
                        type: object
                        required:
                          - currentPage
                          - totalPages
                          - totalCount
                        properties:
                          currentPage:
                            type: integer
                            description: The current page of the result set.
                            example: 1
                          totalPages:
                            type: integer
                            description: The total number of pages available.
                            example: 1
                          totalCount:
                            type: integer
                            description: The total number of profiles that match the search criteria.
                            example: 8
                  message:
                    type: string
                    description: A message indicating the result of the search.
                    example: Found matching profiles
                  foundResults:
                    type: boolean
                    description: Indicates whether matching profiles were found.
                    example: true
              examples:
                ProfilesFound:
                  value:
                    results:
                      searchResults:
                        - profileId: e23223e4-6d61-4875-9750-b842b82e4933
                          userName: blackpanther
                          firstName: TChalla
                          lastName: Wakanda
                          imageUrl: /assets/images/profileImages/blackpanther.jpeg
                          inviteStatus: null
                        - profileId: c43223e4-6d61-4875-9750-b842b82e4934
                          userName: ironman
                          firstName: Tony
                          lastName: Stark
                          imageUrl: /assets/images/profileImages/ironman.jpeg
                          inviteStatus: null
                      pagination:
                        currentPage: 1
                        totalPages: 3
                        totalCount: 8
                    message: Found matching profiles
                    foundResults: true
                NoProfilesFound:
                  summary: No results found with search
                  value:
                    results: null
                    message: No results found
                    foundResults: false
        '400':
          description: 'Bad request, invalid parameters or missing security credentials.'
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 400
                        example: 400
                      error:
                        enum:
                          - Bad Request
                        example: Bad Request
                      message:
                        example: The request contains invalid or missing parameters.
              examples:
                MissingSearchCriteria:
                  summary: 'missing search criteria - UserName, First Name or LastName is required'
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: 'UserName, First Name or LastName is required'
                MissingProfileId:
                  summary: Missing profile Id parameters
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: League ID is required
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 401
                        example: 401
                      error:
                        enum:
                          - Unauthorized
                        example: Unauthorized
                      message:
                        example: Authentication is required or failed.
              examples:
                UnauthorizedError:
                  summary: Unauthorized Error
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: Authentication is required or failed.
                ProfileNotInLeagueError:
                  summary: Error message indicating the profile id is not in the league and cannot perform the league operation
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: Profile does not belong to league
        '500':
          description: Internal Server Error - Unexpected error.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 500
                        example: 500
                      error:
                        enum:
                          - Internal Server Error
                        example: Internal Server Error
                      message:
                        example: An unexpected error occurred on the server.
              examples:
                ServerError:
                  summary: Internal Server Error
                  value:
                    statusCode: 500
                    error: Internal Server Error
                    message: An unexpected error occurred on the server. Please try again later.
      security:
        - accessTokenCookie: []
        - refreshTokenCookie: []
  /api/league/profile/invite:
    post:
      summary: Invite a profile to a league
      tags:
        - League
      operationId: inviteMemberToLeague
      description: This endpoint allows the inviter to send an invitation to a profile to join a league. The inviter must be a member of the league and have a valid token.
      parameters:
        - in: query
          name: profileId
          required: true
          schema:
            type: string
          description: Unique identifier for the user session's profile.
          example: unique-profile-id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - inviterProfileId
                - inviteeProfileId
                - leagueId
              properties:
                inviterProfileId:
                  type: string
                  description: The unique ID of the profile inviting the member.
                  example: inviterProfileId
                inviteeProfileId:
                  type: string
                  description: The unique ID of the profile being invited to the league.
                  example: inviteeProfileId
                leagueId:
                  type: string
                  description: The unique ID of the league where the invitation is being sent.
                  example: leagueId
            examples:
              request:
                summary: Example request for inviting a profile to a league
                value:
                  inviterProfileId: inviterProfileId
                  inviteeProfileId: inviteeProfileId
                  leagueId: leagueId
      responses:
        '200':
          description: Invitation created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: A message indicating the success of the invitation process.
                    example: Invited member to league successfully
              examples:
                success:
                  summary: Invitation sent successfully
                  value:
                    message: Invited member to league successfully
        '400':
          description: Bad request - missing a required field or invalid profile or league IDs
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 400
                        example: 400
                      error:
                        enum:
                          - Bad Request
                        example: Bad Request
                      message:
                        example: The request contains invalid or missing parameters.
              examples:
                MissingInviterProfileId:
                  summary: Missing inviterProfileId
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: Missing inviterProfileId in request
                MissingInviteeProfileId:
                  summary: Missing inviteeProfileId
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: Missing inviteeProfileId in request
                MissingLeagueId:
                  summary: Missing leagueId
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: Missing leagueId in request
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 401
                        example: 401
                      error:
                        enum:
                          - Unauthorized
                        example: Unauthorized
                      message:
                        example: Authentication is required or failed.
              examples:
                UnauthorizedError:
                  summary: Unauthorized Error
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: Authentication is required or failed.
                ProfileNotInLeagueError:
                  summary: Error message indicating the profile id is not in the league and cannot perform the league operation
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: Profile does not belong to league
        '409':
          description: InviteeProfileId is already in league
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 409
                        example: 409
                      error:
                        enum:
                          - Conflict
                        example: Conflict
                      message:
                        example: The resource already exists or conflicts with another resource.
              examples:
                AlreadyInLeague:
                  summary: Message indicating the invitee profile is already in league
                  value:
                    statusCode: 409
                    error: Conflict
                    message: Profile is already invited to league
                AlreadyInvitedToLeague:
                  summary: Message indicating the invitee profile is already invited to league.
                  value:
                    statusCode: 409
                    error: Conflict
                    message: Profile is already in league
        '500':
          description: Internal Server Error - Unexpected error.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - statusCode
                      - error
                      - message
                    properties:
                      statusCode:
                        type: integer
                        description: HTTP status code of the error
                        example: 400
                      error:
                        type: string
                        description: A short label or type of the error
                        example: Bad Request
                      message:
                        type: string
                        description: A detailed message explaining the error
                        example: 'Invalid input, missing required fields.'
                  - type: object
                    properties:
                      statusCode:
                        enum:
                          - 500
                        example: 500
                      error:
                        enum:
                          - Internal Server Error
                        example: Internal Server Error
                      message:
                        example: An unexpected error occurred on the server.
              examples:
                ServerError:
                  summary: Internal Server Error
                  value:
                    statusCode: 500
                    error: Internal Server Error
                    message: An unexpected error occurred on the server. Please try again later.
      security:
        - refreshTokenCookie: []
        - AccessTokenCookie: []
components:
  schemas:
    Errors:
      type: object
      properties:
        ApiError:
          type: object
          required:
            - statusCode
            - error
            - message
          properties:
            statusCode:
              type: integer
              description: HTTP status code of the error
              example: 400
            error:
              type: string
              description: A short label or type of the error
              example: Bad Request
            message:
              type: string
              description: A detailed message explaining the error
              example: 'Invalid input, missing required fields.'
        BadRequestError:
          allOf:
            - type: object
              required:
                - statusCode
                - error
                - message
              properties:
                statusCode:
                  type: integer
                  description: HTTP status code of the error
                  example: 400
                error:
                  type: string
                  description: A short label or type of the error
                  example: Bad Request
                message:
                  type: string
                  description: A detailed message explaining the error
                  example: 'Invalid input, missing required fields.'
            - type: object
              properties:
                statusCode:
                  enum:
                    - 400
                  example: 400
                error:
                  enum:
                    - Bad Request
                  example: Bad Request
                message:
                  example: The request contains invalid or missing parameters.
        NotFoundError:
          allOf:
            - type: object
              required:
                - statusCode
                - error
                - message
              properties:
                statusCode:
                  type: integer
                  description: HTTP status code of the error
                  example: 400
                error:
                  type: string
                  description: A short label or type of the error
                  example: Bad Request
                message:
                  type: string
                  description: A detailed message explaining the error
                  example: 'Invalid input, missing required fields.'
            - type: object
              properties:
                statusCode:
                  enum:
                    - 404
                  example: 404
                error:
                  enum:
                    - Not Found
                  example: Not Found
                message:
                  example: The requested resource was not found.
        ConflictError:
          allOf:
            - type: object
              required:
                - statusCode
                - error
                - message
              properties:
                statusCode:
                  type: integer
                  description: HTTP status code of the error
                  example: 400
                error:
                  type: string
                  description: A short label or type of the error
                  example: Bad Request
                message:
                  type: string
                  description: A detailed message explaining the error
                  example: 'Invalid input, missing required fields.'
            - type: object
              properties:
                statusCode:
                  enum:
                    - 409
                  example: 409
                error:
                  enum:
                    - Conflict
                  example: Conflict
                message:
                  example: The resource already exists or conflicts with another resource.
        UnauthorizedError:
          allOf:
            - type: object
              required:
                - statusCode
                - error
                - message
              properties:
                statusCode:
                  type: integer
                  description: HTTP status code of the error
                  example: 400
                error:
                  type: string
                  description: A short label or type of the error
                  example: Bad Request
                message:
                  type: string
                  description: A detailed message explaining the error
                  example: 'Invalid input, missing required fields.'
            - type: object
              properties:
                statusCode:
                  enum:
                    - 401
                  example: 401
                error:
                  enum:
                    - Unauthorized
                  example: Unauthorized
                message:
                  example: Authentication is required or failed.
        ForbiddenError:
          allOf:
            - type: object
              required:
                - statusCode
                - error
                - message
              properties:
                statusCode:
                  type: integer
                  description: HTTP status code of the error
                  example: 400
                error:
                  type: string
                  description: A short label or type of the error
                  example: Bad Request
                message:
                  type: string
                  description: A detailed message explaining the error
                  example: 'Invalid input, missing required fields.'
            - type: object
              properties:
                statusCode:
                  enum:
                    - 403
                  example: 403
                error:
                  enum:
                    - Forbidden
                  example: Forbidden
                message:
                  example: You do not have permission to perform this action.
        InternalServerError:
          allOf:
            - type: object
              required:
                - statusCode
                - error
                - message
              properties:
                statusCode:
                  type: integer
                  description: HTTP status code of the error
                  example: 400
                error:
                  type: string
                  description: A short label or type of the error
                  example: Bad Request
                message:
                  type: string
                  description: A detailed message explaining the error
                  example: 'Invalid input, missing required fields.'
            - type: object
              properties:
                statusCode:
                  enum:
                    - 500
                  example: 500
                error:
                  enum:
                    - Internal Server Error
                  example: Internal Server Error
                message:
                  example: An unexpected error occurred on the server.
    Account:
      type: object
      required:
        - userName
        - profileId
        - email
        - imageUrl
      properties:
        userName:
          type: string
          description: The username of the account holder
          example: SurvivorFan69
        profileId:
          type: string
          description: Unique identifier for the profile
          example: Unique-Profile-Id-String
        email:
          type: string
          format: email
          description: Email address associated with the account
          example: user@example.com
        imageUrl:
          type: string
          format: uri
          description: URL to the profile image
          example: assets/images/profileImages/genericProfileImage.jpg
        firstName:
          type: string
          description: First name of the user
          example: Jeff
        lastName:
          type: string
          description: Last name of the user
          example: Probst
    UserSessionResponseSuccess:
      type: object
      required:
        - message
        - account
        - numSecondsRefreshTokenExpiresIn
        - isAuthenticated
      properties:
        message:
          type: string
          description: Success message for auth
          example: User signed up successfully
        account:
          type: object
          required:
            - userName
            - profileId
            - email
            - imageUrl
          properties:
            userName:
              type: string
              description: The username of the account holder
              example: SurvivorFan69
            profileId:
              type: string
              description: Unique identifier for the profile
              example: Unique-Profile-Id-String
            email:
              type: string
              format: email
              description: Email address associated with the account
              example: user@example.com
            imageUrl:
              type: string
              format: uri
              description: URL to the profile image
              example: assets/images/profileImages/genericProfileImage.jpg
            firstName:
              type: string
              description: First name of the user
              example: Jeff
            lastName:
              type: string
              description: Last name of the user
              example: Probst
        numSecondsRefreshTokenExpiresIn:
          type: number
          description: Number of seconds the session is valid for
          example: 1800
        isAuthenticated:
          type: boolean
          example: true
    LogoutSuccessResponseSchema:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Success message for logout
          enum:
            - User logged out successfully. All session data has been cleared.
          example: User logged out successfully. All session data has been cleared.
  securitySchemes:
    accessTokenCookie:
      type: apiKey
      in: cookie
      name: accessToken
      description: JWT token for authentication.
    refreshTokenCookie:
      type: apiKey
      in: cookie
      name: refreshToken
      description: JWT token used to refresh access tokens.
